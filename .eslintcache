[{"/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/index.js":"1","/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/reportWebVitals.js":"2","/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/components/progressWrapper/ProgressWrapper.js":"3","/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/components/progressCircles/ProgressCircles.js":"4","/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/components/progressActions/ProgressActions.js":"5"},{"size":573,"mtime":1608926055530,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1608882290871,"results":"8","hashOfConfig":"7"},{"size":628,"mtime":1608926062647,"results":"9","hashOfConfig":"7"},{"size":956,"mtime":1608924910444,"results":"10","hashOfConfig":"7"},{"size":474,"mtime":1608925368413,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1w1rcec",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/index.js",[],"/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/reportWebVitals.js",[],"/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/components/progressWrapper/ProgressWrapper.js",[],"/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/components/progressCircles/ProgressCircles.js",["24"],"import React, { useEffect, useState } from 'react'\nimport \"./progress-cirlce.css\"\n\nexport default function ProgressCircles(props) {\n    const [timeLeft, setTimeLeft] = useState(100);\n    const strokeDashoffset = 440 - (440 * timeLeft) / 100\n    const timeDuration = props.time * 10\n\n    useEffect(() => {\n\n        if (!timeLeft) return;\n        let intervalId\n        if (props.inProgress) {\n            intervalId = setInterval(() => {\n                setTimeLeft(timeLeft - 1);\n            }, timeDuration);\n        } else {\n            clearInterval(intervalId);\n        }\n\n        return () => clearInterval(intervalId);\n\n    }, [timeLeft, props.inProgress]);\n\n    return (\n        <div className=\"progress-circle\">\n            <svg>\n                <circle cx=\"70\" cy=\"70\" r=\"70\"></circle>\n                <circle style={{ strokeDashoffset }} cx=\"70\" cy=\"70\" r=\"70\"></circle>\n            </svg>\n            <h2>{timeLeft}%</h2>\n        </div>\n    )\n}\n",["25","26"],"/mnt/c/Users/ASUS/Desktop/sample/prep-fully/src/components/progressActions/ProgressActions.js",[],{"ruleId":"27","severity":1,"message":"28","line":23,"column":8,"nodeType":"29","endLine":23,"endColumn":36,"suggestions":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'timeDuration'. Either include it or remove the dependency array.","ArrayExpression",["35"],"no-native-reassign",["36"],"no-negated-in-lhs",["37"],{"desc":"38","fix":"39"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [timeLeft, props.inProgress, timeDuration]",{"range":"40","text":"41"},[633,661],"[timeLeft, props.inProgress, timeDuration]"]